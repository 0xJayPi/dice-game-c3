{"ast":null,"code":"var _jsxFileName = \"/home/jp/scafold-eth/dice-game-c3/packages/react-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport Portis from \"@portis/web3\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { Alert, Button, Col, List, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport Authereum from \"authereum\";\nimport { useBalance, useContractLoader, useContractReader, useGasPrice, useOnBlock, useUserProviderAndSigner } from \"eth-hooks\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\nimport { useEventListener } from \"eth-hooks/events/useEventListener\";\nimport Fortmatic from \"fortmatic\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\"; //import Torus from \"@toruslabs/torus-embed\"\n\nimport WalletLink from \"walletlink\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\nimport { Address, Account, Balance, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch } from \"./components\";\nimport { INFURA_ID, NETWORK, NETWORKS, ALCHEMY_KEY } from \"./constants\";\nimport externalContracts from \"./contracts/external_contracts\"; // contracts\n\nimport deployedContracts from \"./contracts/hardhat_contracts.json\";\nimport { Transactor } from \"./helpers\"; // import Hints from \"./Hints\";\n\nimport { ExampleUI, Hints, Subgraph } from \"./views\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction importAll(r) {\n  let images = {};\n  r.keys().map((item, index) => {\n    images[item.replace(\"./\", \"\")] = r(item);\n  });\n  return images;\n}\n\nconst diceImages = importAll(require.context(\"./images/\", false, /\\.(png)$/));\n\nconst {\n  ethers\n} = require(\"ethers\");\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/scaffold-eth/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n/// üì° What chain are your contracts deployed to?\n\n\nconst targetNetwork = NETWORKS.localhost; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n// üò¨ Sorry for all the console logging\n\nconst DEBUG = true;\nconst NETWORKCHECK = true; // üõ∞ providers\n\nif (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\"); // const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\n\nconst scaffoldEthProvider = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\") : null;\nconst poktMainnetProvider = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://eth-mainnet.gateway.pokt.network/v1/lb/61853c567335c80036054a2b\") : null;\nconst mainnetInfura = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(`https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}`) : null; // ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_ID\n// üè† Your local provider is usually pointed at your local blockchain\n\nconst localProviderUrl = targetNetwork.rpcUrl; // as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\n\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv); // üî≠ block explorer URL\n\nconst blockExplorer = targetNetwork.blockExplorer; // Coinbase walletLink init\n\nconst walletLink = new WalletLink({\n  appName: \"coinbase\"\n}); // WalletLink provider\n\nconst walletLinkProvider = walletLink.makeWeb3Provider(`https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}`, 1); // Portis ID: 6255fb2b-58c8-433b-a2c9-62098c05ddc9\n\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\n\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\",\n  // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\n  cacheProvider: true,\n  // optional\n  theme: \"light\",\n  // optional. Change to \"dark\" for a dark theme.\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      // required\n      options: {\n        bridge: \"https://polygon.bridge.walletconnect.org\",\n        infuraId: INFURA_ID,\n        rpc: {\n          1: `https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}`,\n          // mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\n          42: `https://kovan.infura.io/v3/${INFURA_ID}`,\n          100: \"https://dai.poa.network\" // xDai\n\n        }\n      }\n    },\n    portis: {\n      display: {\n        logo: \"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",\n        name: \"Portis\",\n        description: \"Connect to Portis App\"\n      },\n      package: Portis,\n      options: {\n        id: \"6255fb2b-58c8-433b-a2c9-62098c05ddc9\"\n      }\n    },\n    fortmatic: {\n      package: Fortmatic,\n      // required\n      options: {\n        key: \"pk_live_5A7C91B2FC585A17\" // required\n\n      }\n    },\n    // torus: {\n    //   package: Torus,\n    //   options: {\n    //     networkParams: {\n    //       host: \"https://localhost:8545\", // optional\n    //       chainId: 1337, // optional\n    //       networkId: 1337 // optional\n    //     },\n    //     config: {\n    //       buildEnv: \"development\" // optional\n    //     },\n    //   },\n    // },\n    \"custom-walletlink\": {\n      display: {\n        logo: \"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",\n        name: \"Coinbase\",\n        description: \"Connect to Coinbase Wallet (not Coinbase App)\"\n      },\n      package: walletLinkProvider,\n      connector: async (provider, _options) => {\n        await provider.enable();\n        return provider;\n      }\n    },\n    authereum: {\n      package: Authereum // required\n\n    }\n  }\n});\n\nfunction App(props) {\n  _s();\n\n  var _readContracts$DiceGa, _readContracts$DiceGa2;\n\n  const mainnetProvider = poktMainnetProvider && poktMainnetProvider._isProvider ? poktMainnetProvider : scaffoldEthProvider && scaffoldEthProvider._network ? scaffoldEthProvider : mainnetInfura;\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n\n\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n\n  const gasPrice = useGasPrice(targetNetwork, \"fast\"); // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider);\n  const userSigner = userProviderAndSigner.signer;\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n\n    getAddress();\n  }, [userSigner]); // You can warn the user if you would like them to be on a specific network\n\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId = userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId; // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n  // The transactor wraps transactions and provides notificiations\n\n  const tx = Transactor(userSigner, gasPrice); // Faucet Tx can be used to send funds from the faucet\n\n  const faucetTx = Transactor(localProvider, gasPrice); // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n\n  const yourLocalBalance = useBalance(localProvider, address); // Just plug in different üõ∞ providers to get your balance on different chains:\n\n  const yourMainnetBalance = useBalance(mainnetProvider, address); // const contractConfig = useContractConfig();\n\n  const contractConfig = {\n    deployedContracts: deployedContracts || {},\n    externalContracts: externalContracts || {}\n  }; // Load in your local üìù contract and read a value from it:\n\n  const readContracts = useContractLoader(localProvider, contractConfig); // If you want to make üîê write transactions to your contracts, use the userSigner:\n\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId); // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig); // If you want to call a function on a new block\n\n  useOnBlock(mainnetProvider, () => {\n    console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  }); // Then read your DAI balance like:\n\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"]); // keep track of a variable from the contract in the local React state:\n\n  const purpose = useContractReader(readContracts, \"DiceGame\", \"purpose\");\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n  //\n  // üß´ DEBUG üë®üèª‚Äçüî¨\n  //\n\n  useEffect(() => {\n    if (DEBUG && mainnetProvider && address && selectedChainId && yourLocalBalance && yourMainnetBalance && readContracts && writeContracts && mainnetContracts) {\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n      console.log(\"üåé mainnetProvider\", mainnetProvider);\n      console.log(\"üè† localChainId\", localChainId);\n      console.log(\"üë©‚Äçüíº selected address:\", address);\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId); //console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      //console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n\n      console.log(\"üìù readContracts\", readContracts); //console.log(\"üåç DAI contract on mainnet:\", mainnetContracts);\n      //console.log(\"üíµ yourMainnetDAIBalance\", myMainnetDAIBalance);\n\n      console.log(\"üîê writeContracts\", writeContracts);\n    }\n  }, [mainnetProvider, address, selectedChainId, yourLocalBalance, yourMainnetBalance, readContracts, writeContracts, mainnetContracts]);\n  let networkDisplay = \"\";\n\n  if (NETWORKCHECK && localChainId && selectedChainId && localChainId !== selectedChainId) {\n    const networkSelected = NETWORK(selectedChainId);\n    const networkLocal = NETWORK(localChainId);\n\n    if (selectedChainId === 1337 && localChainId === 31337) {\n      networkDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          zIndex: 2,\n          position: \"absolute\",\n          right: 0,\n          top: 60,\n          padding: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          message: \"\\u26A0\\uFE0F Wrong Network ID\",\n          description: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"You have \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"chain id 1337\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 26\n            }, this), \" for localhost and you need to change it to \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"31337\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 90\n            }, this), \" to work with HardHat.\", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"(MetaMask -> Settings -> Networks -> Chain ID -> 31337)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this),\n          type: \"error\",\n          closable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this);\n    } else {\n      networkDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          zIndex: 2,\n          position: \"absolute\",\n          right: 0,\n          top: 60,\n          padding: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          message: \"\\u26A0\\uFE0F Wrong Network\",\n          description: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"You have \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: networkSelected && networkSelected.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 26\n            }, this), \" selected and you need to be on\", \" \", /*#__PURE__*/_jsxDEV(Button, {\n              onClick: async () => {\n                const ethereum = window.ethereum;\n                const data = [{\n                  chainId: \"0x\" + targetNetwork.chainId.toString(16),\n                  chainName: targetNetwork.name,\n                  nativeCurrency: targetNetwork.nativeCurrency,\n                  rpcUrls: [targetNetwork.rpcUrl],\n                  blockExplorerUrls: [targetNetwork.blockExplorer]\n                }];\n                console.log(\"data\", data);\n                let switchTx; // https://docs.metamask.io/guide/rpc-api.html#other-rpc-methods\n\n                try {\n                  switchTx = await ethereum.request({\n                    method: \"wallet_switchEthereumChain\",\n                    params: [{\n                      chainId: data[0].chainId\n                    }]\n                  });\n                } catch (switchError) {\n                  // not checking specific error code, because maybe we're not using MetaMask\n                  try {\n                    switchTx = await ethereum.request({\n                      method: \"wallet_addEthereumChain\",\n                      params: data\n                    });\n                  } catch (addError) {// handle \"add\" error\n                  }\n                }\n\n                if (switchTx) {\n                  console.log(switchTx);\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: networkLocal && networkLocal.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this),\n          type: \"error\",\n          closable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this);\n    }\n  } else {\n    networkDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        zIndex: -1,\n        position: \"absolute\",\n        right: 154,\n        top: 28,\n        padding: 16,\n        color: targetNetwork.color\n      },\n      children: targetNetwork.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this);\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    }); // Subscribe to session disconnection\n\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n  }, [setInjectedProvider]);\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n  const [faucetClicked, setFaucetClicked] = useState(false);\n\n  if (!faucetClicked && localProvider && localProvider._network && localProvider._network.chainId === 31337 && yourLocalBalance && ethers.utils.formatEther(yourLocalBalance) <= 0) {\n    faucetHint = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => {\n          faucetTx({\n            to: address,\n            value: ethers.utils.parseEther(\".05\")\n          });\n          setFaucetClicked(true);\n        },\n        children: \"\\uD83D\\uDCB0 Grab funds from the faucet \\u26FD\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this);\n  }\n\n  const winnerEvents = useEventListener(readContracts, \"DiceGame\", \"Winner\");\n  const rollEvents = useEventListener(readContracts, \"DiceGame\", \"Roll\");\n  const prize = useContractReader(readContracts, \"DiceGame\", \"prize\");\n  const [diceRolled, setDiceRolled] = useState(false);\n  const [diceRollImage, setDiceRollImage] = useState(null);\n  const [claiming, setClaiming] = useState(false);\n  let diceRollImg = \"\";\n\n  if (diceRollImage) {\n    diceRollImg = /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        width: \"300px\",\n        heigth: \"300px\"\n      },\n      src: diceImages[`${diceRollImage}.png`].default\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 19\n    }, this);\n  }\n\n  const rollTheDice = async () => {\n    setDiceRolled(true);\n    setDiceRollImage(\"ROLL\");\n    tx(writeContracts.DiceGame.rollTheDice({\n      value: ethers.utils.parseEther(\"0.002\"),\n      gasLimit: 500000\n    }), update => {\n      if ((update === null || update === void 0 ? void 0 : update.status) === \"failed\") {\n        setDiceRolled(false); //setDiceRollImage(null);\n      }\n    });\n  };\n  /*\n  const riggedRoll = async () => {\n  tx(writeContracts.RiggedRoll.riggedRoll({ gasLimit: 500000 }), update => {\n    console.log(\"TX UPDATE\", update);\n    if (update?.status === \"sent\" || update?.status === 1) {\n      setDiceRolled(true);\n      setDiceRollImage(\"ROLL\");\n    }\n    if (update?.status === \"failed\") {\n      setDiceRolled(false);\n      //setDiceRollImage(null);\n    }\n    if (update?.status == 1 || update?.status == \"confirmed\") {\n      setTimeout(() => {\n        setDiceRolled(false);\n      }, 1500);\n    }\n  });\n  };\n  const riggedFilter = readContracts.DiceGame?.filters.Roll(riggedRoll.address, null);\n  readContracts.DiceGame?.on(riggedFilter, (_, value) => {\n  if (value) {\n    const numberRolled = value.toNumber().toString(16).toUpperCase();\n    setDiceRollImage(numberRolled);\n    setDiceRolled(false);\n  }\n  });\n  */\n\n\n  const filter = (_readContracts$DiceGa = readContracts.DiceGame) === null || _readContracts$DiceGa === void 0 ? void 0 : _readContracts$DiceGa.filters.Roll(address, null);\n  (_readContracts$DiceGa2 = readContracts.DiceGame) === null || _readContracts$DiceGa2 === void 0 ? void 0 : _readContracts$DiceGa2.on(filter, (_, value) => {\n    if (value) {\n      const numberRolled = value.toNumber().toString(16).toUpperCase();\n      setDiceRollImage(numberRolled);\n      setDiceRolled(false);\n    }\n  });\n  const date = new Date();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 7\n    }, this), networkDisplay, /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        style: {\n          textAlign: \"center\"\n        },\n        selectedKeys: [route],\n        mode: \"horizontal\",\n        children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              setRoute(\"/\");\n            },\n            to: \"/\",\n            children: \"Dice!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this)\n        }, \"/\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              setRoute(\"/debug\");\n            },\n            to: \"/debug\",\n            children: \"Debug\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }, this)\n        }, \"/debug\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 9\n      }, this), console.log(\"roll events: \", rollEvents), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: 250,\n                margin: \"auto\",\n                marginTop: 64\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Roll Events:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                style: {\n                  height: 258,\n                  overflow: \"hidden\"\n                },\n                dataSource: rollEvents,\n                renderItem: item => {\n                  return /*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(Address, {\n                      value: item.args[0],\n                      ensProvider: mainnetProvider,\n                      fontSize: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 562,\n                      columnNumber: 25\n                    }, this), \"\\xA0Roll:\\xA0\", item.args[1].toNumber().toString(16).toUpperCase()]\n                  }, item.args[0] + \" \" + item.args[1] + \" \" + date.getTime() + \" \" + item.blockNumber, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 559,\n                    columnNumber: 23\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"centerWrapper\",\n              style: {\n                padding: 16\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Roll a 0, 1, or 2 to win the prize!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Balance, {\n                balance: prize,\n                dollarMultiplier: price,\n                fontSize: 32\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  padding: 16,\n                  format: \"flex\",\n                  flexDirection: \"row\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"primary\",\n                  disabled: diceRolled,\n                  onClick: rollTheDice,\n                  children: \"Roll the dice!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 17\n              }, this), diceRollImg]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: 250,\n                margin: \"auto\",\n                marginTop: 32\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Winner Events:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                style: {\n                  height: 258,\n                  overflow: \"hidden\"\n                },\n                dataSource: winnerEvents,\n                renderItem: item => {\n                  return /*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(Address, {\n                      value: item.args[0],\n                      ensProvider: mainnetProvider,\n                      fontSize: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 607,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 608,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Balance, {\n                      balance: item.args[1],\n                      dollarMultiplier: price\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 609,\n                      columnNumber: 25\n                    }, this)]\n                  }, item.args[0] + \" \" + item.args[1] + \" \" + date.getTime() + \" \" + item.blockNumber, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 604,\n                    columnNumber: 23\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/debug\",\n          children: [/*#__PURE__*/_jsxDEV(Contract, {\n            name: \"DiceGame\",\n            price: price,\n            signer: userSigner,\n            provider: localProvider,\n            address: address,\n            blockExplorer: blockExplorer,\n            contractConfig: contractConfig\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Contract, {\n            name: \"RiggedRoll\",\n            price: price,\n            signer: userSigner,\n            provider: localProvider,\n            address: address,\n            blockExplorer: blockExplorer,\n            contractConfig: contractConfig\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeSwitch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        textAlign: \"right\",\n        right: 0,\n        top: 0,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Account, {\n        address: address,\n        localProvider: localProvider,\n        userSigner: userSigner,\n        mainnetProvider: mainnetProvider,\n        price: price,\n        web3Modal: web3Modal,\n        loadWeb3Modal: loadWeb3Modal,\n        logoutOfWeb3Modal: logoutOfWeb3Modal,\n        blockExplorer: blockExplorer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 9\n      }, this), faucetHint]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        textAlign: \"left\",\n        left: 0,\n        bottom: 20,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        gutter: [4, 4],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          children: /*#__PURE__*/_jsxDEV(Ramp, {\n            price: price,\n            address: address,\n            networks: NETWORKS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            textAlign: \"center\",\n            opacity: 0.8\n          },\n          children: /*#__PURE__*/_jsxDEV(GasGauge, {\n            gasPrice: gasPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            textAlign: \"center\",\n            opacity: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n            },\n            size: \"large\",\n            shape: \"round\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginRight: 8\n              },\n              role: \"img\",\n              \"aria-label\": \"support\",\n              children: \"\\uD83D\\uDCAC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 15\n            }, this), \"Support\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        gutter: [4, 4],\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children:\n          /*  if the local provider has a signer, let's show the faucet:  */\n          faucetAvailable ? /*#__PURE__*/_jsxDEV(Faucet, {\n            localProvider: localProvider,\n            price: price,\n            ensProvider: mainnetProvider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 17\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 521,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"njuPXqzHSTXNPu9VBm81UnvbVpI=\", false, function () {\n  return [useExchangeEthPrice, useGasPrice, useUserProviderAndSigner, useBalance, useBalance, useContractLoader, useContractLoader, useContractLoader, useOnBlock, useContractReader, useContractReader, useEventListener, useEventListener, useContractReader];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/jp/scafold-eth/dice-game-c3/packages/react-app/src/App.jsx"],"names":["Portis","WalletConnectProvider","Alert","Button","Col","List","Menu","Row","Authereum","useBalance","useContractLoader","useContractReader","useGasPrice","useOnBlock","useUserProviderAndSigner","useExchangeEthPrice","useEventListener","Fortmatic","React","useCallback","useEffect","useState","BrowserRouter","Link","Route","Switch","WalletLink","Web3Modal","Address","Account","Balance","Contract","Faucet","GasGauge","Header","Ramp","ThemeSwitch","INFURA_ID","NETWORK","NETWORKS","ALCHEMY_KEY","externalContracts","deployedContracts","Transactor","ExampleUI","Hints","Subgraph","importAll","r","images","keys","map","item","index","replace","diceImages","require","context","ethers","targetNetwork","localhost","DEBUG","NETWORKCHECK","console","log","scaffoldEthProvider","navigator","onLine","providers","StaticJsonRpcProvider","poktMainnetProvider","mainnetInfura","localProviderUrl","rpcUrl","localProviderUrlFromEnv","process","env","REACT_APP_PROVIDER","localProvider","blockExplorer","walletLink","appName","walletLinkProvider","makeWeb3Provider","web3Modal","network","cacheProvider","theme","providerOptions","walletconnect","package","options","bridge","infuraId","rpc","portis","display","logo","name","description","id","fortmatic","key","connector","provider","_options","enable","authereum","App","props","mainnetProvider","_isProvider","_network","injectedProvider","setInjectedProvider","address","setAddress","logoutOfWeb3Modal","clearCachedProvider","disconnect","setTimeout","window","location","reload","price","gasPrice","userProviderAndSigner","userSigner","signer","getAddress","newAddress","localChainId","chainId","selectedChainId","tx","faucetTx","yourLocalBalance","yourMainnetBalance","contractConfig","readContracts","writeContracts","mainnetContracts","_lastBlockNumber","myMainnetDAIBalance","purpose","networkDisplay","networkSelected","networkLocal","zIndex","position","right","top","padding","ethereum","data","toString","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","switchTx","request","method","params","switchError","addError","color","loadWeb3Modal","connect","Web3Provider","on","code","reason","cachedProvider","route","setRoute","pathname","faucetHint","faucetAvailable","connection","indexOf","faucetClicked","setFaucetClicked","utils","formatEther","to","value","parseEther","winnerEvents","rollEvents","prize","diceRolled","setDiceRolled","diceRollImage","setDiceRollImage","claiming","setClaiming","diceRollImg","width","heigth","default","rollTheDice","DiceGame","gasLimit","update","status","filter","filters","Roll","_","numberRolled","toNumber","toUpperCase","date","Date","textAlign","margin","marginTop","height","overflow","args","getTime","blockNumber","format","flexDirection","left","bottom","opacity","open","marginRight"],"mappings":"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","sourcesContent":["import Portis from \"@portis/web3\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { Alert, Button, Col, List, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport Authereum from \"authereum\";\nimport {\n  useBalance,\n  useContractLoader,\n  useContractReader,\n  useGasPrice,\n  useOnBlock,\n  useUserProviderAndSigner,\n} from \"eth-hooks\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\nimport { useEventListener } from \"eth-hooks/events/useEventListener\";\nimport Fortmatic from \"fortmatic\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\n//import Torus from \"@toruslabs/torus-embed\"\nimport WalletLink from \"walletlink\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\nimport { Address, Account, Balance, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch } from \"./components\";\nimport { INFURA_ID, NETWORK, NETWORKS, ALCHEMY_KEY } from \"./constants\";\nimport externalContracts from \"./contracts/external_contracts\";\n// contracts\nimport deployedContracts from \"./contracts/hardhat_contracts.json\";\nimport { Transactor } from \"./helpers\";\n// import Hints from \"./Hints\";\nimport { ExampleUI, Hints, Subgraph } from \"./views\";\n\nfunction importAll(r) {\n  let images = {};\n  r.keys().map((item, index) => {\n    images[item.replace(\"./\", \"\")] = r(item);\n  });\n  return images;\n}\n\nconst diceImages = importAll(require.context(\"./images/\", false, /\\.(png)$/));\n\nconst { ethers } = require(\"ethers\");\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/scaffold-eth/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n/// üì° What chain are your contracts deployed to?\nconst targetNetwork = NETWORKS.localhost; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// üò¨ Sorry for all the console logging\nconst DEBUG = true;\nconst NETWORKCHECK = true;\n\n// üõ∞ providers\nif (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\");\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\nconst scaffoldEthProvider = navigator.onLine\n  ? new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\")\n  : null;\nconst poktMainnetProvider = navigator.onLine\n  ? new ethers.providers.StaticJsonRpcProvider(\n      \"https://eth-mainnet.gateway.pokt.network/v1/lb/61853c567335c80036054a2b\",\n    )\n  : null;\nconst mainnetInfura = navigator.onLine\n  ? new ethers.providers.StaticJsonRpcProvider(`https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}`)\n  : null;\n// ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_ID\n// üè† Your local provider is usually pointed at your local blockchain\nconst localProviderUrl = targetNetwork.rpcUrl;\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv);\n\n// üî≠ block explorer URL\nconst blockExplorer = targetNetwork.blockExplorer;\n\n// Coinbase walletLink init\nconst walletLink = new WalletLink({\n  appName: \"coinbase\",\n});\n\n// WalletLink provider\nconst walletLinkProvider = walletLink.makeWeb3Provider(`https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}`, 1);\n\n// Portis ID: 6255fb2b-58c8-433b-a2c9-62098c05ddc9\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\", // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\n  cacheProvider: true, // optional\n  theme: \"light\", // optional. Change to \"dark\" for a dark theme.\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        bridge: \"https://polygon.bridge.walletconnect.org\",\n        infuraId: INFURA_ID,\n        rpc: {\n          1: `https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}`, // mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\n          42: `https://kovan.infura.io/v3/${INFURA_ID}`,\n          100: \"https://dai.poa.network\", // xDai\n        },\n      },\n    },\n    portis: {\n      display: {\n        logo: \"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",\n        name: \"Portis\",\n        description: \"Connect to Portis App\",\n      },\n      package: Portis,\n      options: {\n        id: \"6255fb2b-58c8-433b-a2c9-62098c05ddc9\",\n      },\n    },\n    fortmatic: {\n      package: Fortmatic, // required\n      options: {\n        key: \"pk_live_5A7C91B2FC585A17\", // required\n      },\n    },\n    // torus: {\n    //   package: Torus,\n    //   options: {\n    //     networkParams: {\n    //       host: \"https://localhost:8545\", // optional\n    //       chainId: 1337, // optional\n    //       networkId: 1337 // optional\n    //     },\n    //     config: {\n    //       buildEnv: \"development\" // optional\n    //     },\n    //   },\n    // },\n    \"custom-walletlink\": {\n      display: {\n        logo: \"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",\n        name: \"Coinbase\",\n        description: \"Connect to Coinbase Wallet (not Coinbase App)\",\n      },\n      package: walletLinkProvider,\n      connector: async (provider, _options) => {\n        await provider.enable();\n        return provider;\n      },\n    },\n    authereum: {\n      package: Authereum, // required\n    },\n  },\n});\n\nfunction App(props) {\n  const mainnetProvider =\n    poktMainnetProvider && poktMainnetProvider._isProvider\n      ? poktMainnetProvider\n      : scaffoldEthProvider && scaffoldEthProvider._network\n      ? scaffoldEthProvider\n      : mainnetInfura;\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\n  // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider);\n  const userSigner = userProviderAndSigner.signer;\n\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [userSigner]);\n\n  // You can warn the user if you would like them to be on a specific network\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId =\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\n\n  // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userSigner, gasPrice);\n\n  // Faucet Tx can be used to send funds from the faucet\n  const faucetTx = Transactor(localProvider, gasPrice);\n\n  // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  // Just plug in different üõ∞ providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n\n  // const contractConfig = useContractConfig();\n\n  const contractConfig = { deployedContracts: deployedContracts || {}, externalContracts: externalContracts || {} };\n\n  // Load in your local üìù contract and read a value from it:\n  const readContracts = useContractLoader(localProvider, contractConfig);\n\n  // If you want to make üîê write transactions to your contracts, use the userSigner:\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId);\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig);\n\n  // If you want to call a function on a new block\n  useOnBlock(mainnetProvider, () => {\n    console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  });\n\n  // Then read your DAI balance like:\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\n    \"0x34aA3F359A9D614239015126635CE7732c18fDF3\",\n  ]);\n\n  // keep track of a variable from the contract in the local React state:\n  const purpose = useContractReader(readContracts, \"DiceGame\", \"purpose\");\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n  //\n  // üß´ DEBUG üë®üèª‚Äçüî¨\n  //\n  useEffect(() => {\n    if (\n      DEBUG &&\n      mainnetProvider &&\n      address &&\n      selectedChainId &&\n      yourLocalBalance &&\n      yourMainnetBalance &&\n      readContracts &&\n      writeContracts &&\n      mainnetContracts\n    ) {\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n      console.log(\"üåé mainnetProvider\", mainnetProvider);\n      console.log(\"üè† localChainId\", localChainId);\n      console.log(\"üë©‚Äçüíº selected address:\", address);\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\n      //console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      //console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"üìù readContracts\", readContracts);\n      //console.log(\"üåç DAI contract on mainnet:\", mainnetContracts);\n      //console.log(\"üíµ yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"üîê writeContracts\", writeContracts);\n    }\n  }, [\n    mainnetProvider,\n    address,\n    selectedChainId,\n    yourLocalBalance,\n    yourMainnetBalance,\n    readContracts,\n    writeContracts,\n    mainnetContracts,\n  ]);\n\n  let networkDisplay = \"\";\n  if (NETWORKCHECK && localChainId && selectedChainId && localChainId !== selectedChainId) {\n    const networkSelected = NETWORK(selectedChainId);\n    const networkLocal = NETWORK(localChainId);\n    if (selectedChainId === 1337 && localChainId === 31337) {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"‚ö†Ô∏è Wrong Network ID\"\n            description={\n              <div>\n                You have <b>chain id 1337</b> for localhost and you need to change it to <b>31337</b> to work with\n                HardHat.\n                <div>(MetaMask -&gt; Settings -&gt; Networks -&gt; Chain ID -&gt; 31337)</div>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    } else {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"‚ö†Ô∏è Wrong Network\"\n            description={\n              <div>\n                You have <b>{networkSelected && networkSelected.name}</b> selected and you need to be on{\" \"}\n                <Button\n                  onClick={async () => {\n                    const ethereum = window.ethereum;\n                    const data = [\n                      {\n                        chainId: \"0x\" + targetNetwork.chainId.toString(16),\n                        chainName: targetNetwork.name,\n                        nativeCurrency: targetNetwork.nativeCurrency,\n                        rpcUrls: [targetNetwork.rpcUrl],\n                        blockExplorerUrls: [targetNetwork.blockExplorer],\n                      },\n                    ];\n                    console.log(\"data\", data);\n\n                    let switchTx;\n                    // https://docs.metamask.io/guide/rpc-api.html#other-rpc-methods\n                    try {\n                      switchTx = await ethereum.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [{ chainId: data[0].chainId }],\n                      });\n                    } catch (switchError) {\n                      // not checking specific error code, because maybe we're not using MetaMask\n                      try {\n                        switchTx = await ethereum.request({\n                          method: \"wallet_addEthereumChain\",\n                          params: data,\n                        });\n                      } catch (addError) {\n                        // handle \"add\" error\n                      }\n                    }\n\n                    if (switchTx) {\n                      console.log(switchTx);\n                    }\n                  }}\n                >\n                  <b>{networkLocal && networkLocal.name}</b>\n                </Button>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    }\n  } else {\n    networkDisplay = (\n      <div style={{ zIndex: -1, position: \"absolute\", right: 154, top: 28, padding: 16, color: targetNetwork.color }}>\n        {targetNetwork.name}\n      </div>\n    );\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    // Subscribe to session disconnection\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n\n  const [faucetClicked, setFaucetClicked] = useState(false);\n  if (\n    !faucetClicked &&\n    localProvider &&\n    localProvider._network &&\n    localProvider._network.chainId === 31337 &&\n    yourLocalBalance &&\n    ethers.utils.formatEther(yourLocalBalance) <= 0\n  ) {\n    faucetHint = (\n      <div style={{ padding: 16 }}>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            faucetTx({\n              to: address,\n              value: ethers.utils.parseEther(\".05\"),\n            });\n            setFaucetClicked(true);\n          }}\n        >\n          üí∞ Grab funds from the faucet ‚õΩÔ∏è\n        </Button>\n      </div>\n    );\n  }\n\n  const winnerEvents = useEventListener(readContracts, \"DiceGame\", \"Winner\");\n  const rollEvents = useEventListener(readContracts, \"DiceGame\", \"Roll\");\n  const prize = useContractReader(readContracts, \"DiceGame\", \"prize\");\n\n  const [diceRolled, setDiceRolled] = useState(false);\n  const [diceRollImage, setDiceRollImage] = useState(null);\n  const [claiming, setClaiming] = useState(false);\n\n  let diceRollImg = \"\";\n  if (diceRollImage) {\n    diceRollImg = <img style={{ width: \"300px\", heigth: \"300px\" }} src={diceImages[`${diceRollImage}.png`].default} />;\n  }\n\n  const rollTheDice = async () => {\n    setDiceRolled(true);\n    setDiceRollImage(\"ROLL\");\n\n    tx(writeContracts.DiceGame.rollTheDice({ value: ethers.utils.parseEther(\"0.002\"), gasLimit: 500000 }), update => {\n      if (update?.status === \"failed\") {\n        setDiceRolled(false);\n        //setDiceRollImage(null);\n      }\n    });\n  };\n\n    /*\n  const riggedRoll = async () => {\n    tx(writeContracts.RiggedRoll.riggedRoll({ gasLimit: 500000 }), update => {\n      console.log(\"TX UPDATE\", update);\n      if (update?.status === \"sent\" || update?.status === 1) {\n        setDiceRolled(true);\n        setDiceRollImage(\"ROLL\");\n      }\n      if (update?.status === \"failed\") {\n        setDiceRolled(false);\n        //setDiceRollImage(null);\n      }\n      if (update?.status == 1 || update?.status == \"confirmed\") {\n        setTimeout(() => {\n          setDiceRolled(false);\n        }, 1500);\n      }\n    });\n  };\n\n  const riggedFilter = readContracts.DiceGame?.filters.Roll(riggedRoll.address, null);\n\n  readContracts.DiceGame?.on(riggedFilter, (_, value) => {\n    if (value) {\n      const numberRolled = value.toNumber().toString(16).toUpperCase();\n      setDiceRollImage(numberRolled);\n      setDiceRolled(false);\n    }\n  });\n*/\n\n  const filter = readContracts.DiceGame?.filters.Roll(address, null);\n\n  readContracts.DiceGame?.on(filter, (_, value) => {\n    if (value) {\n      const numberRolled = value.toNumber().toString(16).toUpperCase();\n      setDiceRollImage(numberRolled);\n      setDiceRolled(false);\n    }\n  });\n\n  const date = new Date();\n\n  return (\n    <div className=\"App\">\n      {/* ‚úèÔ∏è Edit the header and change the title to your project name */}\n      <Header />\n      {networkDisplay}\n      <BrowserRouter>\n        <Menu style={{ textAlign: \"center\" }} selectedKeys={[route]} mode=\"horizontal\">\n          <Menu.Item key=\"/\">\n            <Link\n              onClick={() => {\n                setRoute(\"/\");\n              }}\n              to=\"/\"\n            >\n              Dice!\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/debug\">\n            <Link\n              onClick={() => {\n                setRoute(\"/debug\");\n              }}\n              to=\"/debug\"\n            >\n              Debug\n            </Link>\n          </Menu.Item>\n        </Menu>\n        {console.log(\"roll events: \", rollEvents)}\n        <Switch>\n          <Route exact path=\"/\">\n            <div style={{ display: \"flex\" }}>\n              <div style={{ width: 250, margin: \"auto\", marginTop: 64 }}>\n                <div>Roll Events:</div>\n                <List\n                  style={{ height: 258, overflow: \"hidden\" }}\n                  dataSource={rollEvents}\n                  renderItem={item => {\n                    return (\n                      <List.Item\n                        key={item.args[0] + \" \" + item.args[1] + \" \" + date.getTime() + \" \" + item.blockNumber}\n                      >\n                        <Address value={item.args[0]} ensProvider={mainnetProvider} fontSize={16} />\n                        &nbsp;Roll:&nbsp;{item.args[1].toNumber().toString(16).toUpperCase()}\n                      </List.Item>\n                    );\n                  }}\n                />\n              </div>\n              <div id=\"centerWrapper\" style={{ padding: 16 }}>\n                <h2>Roll a 0, 1, or 2 to win the prize!</h2>\n                <Balance balance={prize} dollarMultiplier={price} fontSize={32} />\n                <div style={{ padding: 16, format: \"flex\", flexDirection: \"row\" }}>\n                  <Button type=\"primary\" disabled={diceRolled} onClick={rollTheDice}>\n                    Roll the dice!\n                  </Button>\n                  {/*\n                  <div style={{ padding: 16 }}>\n                    <Account\n                      address={readContracts?.RiggedRoll?.address}\n                      localProvider={localProvider}\n                      userSigner={false}\n                      mainnetProvider={mainnetProvider}\n                      price={price}\n                      web3Modal={false}\n                      loadWeb3Modal={false}\n                      logoutOfWeb3Modal={false}\n                      blockExplorer={blockExplorer}\n                    />\n                    <Button style={{ margin: 16 }} type=\"primary\" disabled={diceRolled} onClick={riggedRoll}>\n                      Rigged Roll!\n                    </Button>\n                  </div>\n                */}\n                </div>\n                {diceRollImg}\n              </div>\n              <div style={{ width: 250, margin: \"auto\", marginTop: 32 }}>\n                <div>Winner Events:</div>\n                <List\n                  style={{ height: 258, overflow: \"hidden\" }}\n                  dataSource={winnerEvents}\n                  renderItem={item => {\n                    return (\n                      <List.Item\n                        key={item.args[0] + \" \" + item.args[1] + \" \" + date.getTime() + \" \" + item.blockNumber}\n                      >\n                        <Address value={item.args[0]} ensProvider={mainnetProvider} fontSize={16} />\n                        <br></br>\n                        <Balance balance={item.args[1]} dollarMultiplier={price} />\n                      </List.Item>\n                    );\n                  }}\n                />\n              </div>\n            </div>\n          </Route>\n          <Route exact path=\"/debug\">\n            {/*\n                üéõ this scaffolding is full of commonly used components\n                this <Contract/> component will automatically parse your ABI\n                and give you a form to interact with it locally\n            */}\n\n            <Contract\n              name=\"DiceGame\"\n              price={price}\n              signer={userSigner}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n              contractConfig={contractConfig}\n            />\n            <Contract\n              name=\"RiggedRoll\"\n              price={price}\n              signer={userSigner}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n              contractConfig={contractConfig}\n            />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n      <ThemeSwitch />\n\n      {/* üë®‚Äçüíº Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n        <Account\n          address={address}\n          localProvider={localProvider}\n          userSigner={userSigner}\n          mainnetProvider={mainnetProvider}\n          price={price}\n          web3Modal={web3Modal}\n          loadWeb3Modal={loadWeb3Modal}\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\n          blockExplorer={blockExplorer}\n        />\n        {faucetHint}\n      </div>\n\n      {/* üó∫ Extra UI like gas price, eth price, faucet, and support: */}\n      <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={8}>\n            <Ramp price={price} address={address} networks={NETWORKS} />\n          </Col>\n\n          <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n            <GasGauge gasPrice={gasPrice} />\n          </Col>\n          <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n            <Button\n              onClick={() => {\n                window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n              }}\n              size=\"large\"\n              shape=\"round\"\n            >\n              <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                üí¨\n              </span>\n              Support\n            </Button>\n          </Col>\n        </Row>\n\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={24}>\n            {\n              /*  if the local provider has a signer, let's show the faucet:  */\n              faucetAvailable ? (\n                <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider} />\n              ) : (\n                \"\"\n              )\n            }\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}